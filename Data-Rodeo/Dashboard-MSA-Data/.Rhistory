library( shiny )
library( tidyverse )
library( plotly )
library( bslib )
library( shinydashboard )
library( sf )
library( shinythemes )
library( shinyWidgets )
library( RColorBrewer )
library( urbnthemes )
library( leaflet )
source('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/np-density-dashboard/R/helpers.R')
# Render png to jpeg
# Import counties landing page map
main <- "/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/"
setwd( paste0( main, "np-density-dashboard/Data-Rodeo/Dashboard-MSA-Data/" ) )
msas <- readRDS( "USA-MSAs.rds" )
lp.plot.chloro( df = msas %>% filter( year == "2020" & MSA == "Washington-Arlington-Alexandria" ), input = "dens" )
lp.plot.chloro <- function( df, input ){
# there are issues binning variables with high quantitites of zero values. Thus,
# we will separate the zero and non-zero values of the metrics into separate datasets, bin them separately
# and then row bind them back together for the final plot:
df.zeros <- df[df[[ input ]] == 0, ] # metric = 0
df.zeros[[ paste0( input ) ]] <- 0           # assign value of zero for the ordinal variable
df.nonzeros <- df[df[[ input ]] != 0,] # metric != 0
df.nonzeros[[ paste0( input  ) ]] <- factor( quant.cut( var = input, x = 6 , df = df.nonzeros ) ) # bin into 6
# ordinal categories
df.out <- rbind( df.zeros, df.nonzeros)  # bind
df.out[[ paste0( input  ) ]] <- factor( df.out[[ paste0( input  ) ]] ) # set to factor
ggplot( ) + geom_sf( df.out,             # plot
mapping = aes_string( fill = paste0( input ) ),
color = NA, size = 0.5 ) +
scale_fill_brewer( "Density Scale", palette = 1 ) +
theme_minimal( ) +
theme( text = element_text( family = "Avenir" ) )
}
lp.plot.chloro( df = msas %>% filter( year == "2020" & MSA == "Washington-Arlington-Alexandria" ), input = "dens" )
ss<-filter( msas,  year == "2020" & MSA == "Washington-Arlington-Alexandria" )
lp.plot.hist <- function( df, input ) {
ggplot( df, aes_string( x =  input ) )  +
geom_histogram( color="darkblue", fill="lightblue", bins = 40 ) +
theme_minimal()+
ylab( "Frequency") +
xlab( "NPO Density ( # New NPOs / 1,000 county residents )")+
ggtitle( "Distribution of County Nonprofit (NPO) Density")+
theme( text = element_text( family = "Avenir") )
}
lp.plot.hist( df = ss  , input = "dens")
lp.tbl( msas, input = "dens" )
# landing page summary stats
lp.tbl <- function( df, input ) {
round( data.frame( Mean = mean( df[[ input ]], na.rm = T),
Median = median( df[[ input ]], na.rm = T),
Min = min( df[[ input ]], na.rm = T),
Max = max( df[[ input ]], na.rm = T),
Variance = var( df[[ input ]], na.rm = T),
SD = sd( df[[ input ]], na.rm = T) ), digits = 2 )
}
lp.tbl( msas, input = "dens" )
min(ss$dens)
mean(ss$dens)
mean( ss[[ "dens" ]], na.rm = T)
lp.plot.hist( df = ss  , input = "dens")
lp.tbl( ss, input = "dens" )
runApp('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/np-density-dashboard/R/Nonprofit-Density')
ss<-filter( msas,  year == "cum" & MSA == "Washington-Arlington-Alexandria" )
lp.plot.hist( df = ss  , input = "dens")
mean(ss$dens)
lp.tbl( ss, input = "dens" )
ss[which(ss$dens==0),]
min(ss$dens)
max(ss$dens)
max(ss$pop)
min(ss$pop)
ss[which(ss$pop==0),]
setwd( lf )
setwd("../np-density-dashboard/Data-Rodeo")
# dir.create( "Dashboard-MSA-Data" )
# dir()
setwd("Dashboard-MSA-Data")
library( tidyverse )
library( urbnmapr )         # state/county shapefiles
library( sf )               # simple features framework
library( tigris )           # TIGER shapefiles
library( tidycensus )       # Census data queries
library( cartogram )        # Create sf objects for Dorling Cartograms
options( tigris_class = "sf" )
options( tigris_use_cache = TRUE )
source('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/np-density-dashboard/R/helpers.R')
lf <- "/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/Large-Files-Bank"
setwd( lf )
setwd("../np-density-dashboard/Data-Rodeo")
# dir.create( "Dashboard-MSA-Data" )
# dir()
setwd("Dashboard-MSA-Data")
readRDS( "USA-MSAs.rds" )
d.4<-readRDS( "USA-MSAs.rds" )
d.4<-d.4%>%
mutate(dens = ifelse( n == 0, 0, dens ) )
ss<-filter( msas,  year == "cum" & MSA == "Washington-Arlington-Alexandria" )
lp.tbl( ss, input = "dens" )
ss<-filter( d.4,  year == "cum" & MSA == "Washington-Arlington-Alexandria" )
lp.tbl( ss, input = "dens" )
mean( ss[[ "dens" ]], na.rm = T)
max( ss[[ "dens" ]], na.rm = T)
min( ss[[ "dens" ]], na.rm = T)
d.4<-d.4%>%
mutate(dens = ifelse( pop == 0, 0, dens ) )
ss<-filter( d.4,  year == "cum" & MSA == "Washington-Arlington-Alexandria" )
lp.tbl( ss, input = "dens" )
setwd( lf )
setwd("../np-density-dashboard/Data-Rodeo")
# dir.create( "Dashboard-MSA-Data" )
# dir()
setwd("Dashboard-MSA-Data")
saveRDS( d.4, "USA-MSAs.rds" )
