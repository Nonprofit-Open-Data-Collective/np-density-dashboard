rename( MCQ190 = MCQ195 )
mcqall <- ( rbind( mcqdat99[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat01[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat03[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat05[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat07[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat09[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat11[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat13[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat15[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )],
mcqdat17[, c( 'SEQN', 'cycle', 'RIDAGEMN', 'RIDAGEYR', 'MCQ220', 'MCQ230A', 'MCQ230B', 'MCQ230C', 'MCQ230D', 'MCQ160B', 'MCQ160C', 'MCQ160D', 'MCQ160E', 'MCQ160F', 'MCQ160A', 'MCQ160L', 'MCQ190' )] ) )
# CA, CVD, and cancer site variables
mcqall <- mcqall %>%
mutate(CA = factor( ifelse( MCQ220 == 1, 1,
ifelse( MCQ220 == 2, 0, NA ) ) ),
CVD = ifelse( MCQ160B == 1 | MCQ160C == 1 | MCQ160D == 1 |
MCQ160E == 1 | MCQ160F == 1, 1,
ifelse( MCQ160B %in% c( 7, 9 ) | MCQ160C %in% c( 7, 9 ) |
MCQ160D %in% c( 7, 9 ) | MCQ160E %in% c( 7, 9 ) |
MCQ160F %in% c( 7, 9 ), NA, 0 ) ),
CATYPEA = factor( MCQ230A,
levels = c( 9:39, 99 ),
labels = c( 'Unknown', 'Bladder', 'Blood', 'Bone', 'Brain', 'Breast', 'Cervical', 'Colon',
'Esophageal', 'Gallbladder', 'Kidney', 'Larynx', 'Leukemia', 'Liver', 'Lung', 'Lymphoma', 'Melanoma',
'Oral/lip', 'Nervous System', 'Ovarian', 'Pancreatic', 'Prostate', 'Rectal', 'Non-Melanoma Skin',
'Skin-Other', 'Soft Tissue', 'Stomach', 'Testicular', 'Thyroid', 'Uterus', 'Other', 'Unknown' ) ),
CATYPEB = factor( MCQ230B,
levels = c( 10:39 ),
labels = c( 'Bladder', 'Blood', 'Bone', 'Brain', 'Breast', 'Cervical', 'Colon',
'Esophageal', 'Gallbladder', 'Kidney', 'Larynx', 'Leukemia', 'Liver', 'Lung', 'Lymphoma', 'Melanoma',
'Oral/lip', 'Nervous System', 'Ovarian', 'Pancreatic', 'Prostate', 'Rectal', 'Non-Melanoma Skin',
'Skin-Other', 'Soft Tissue', 'Stomach', 'Testicular', 'Thyroid', 'Uterus', 'Other' ) ),
CATYPEC = factor( MCQ230C,
levels = c( 10:39 ),
labels = c( 'Bladder', 'Blood', 'Bone', 'Brain', 'Breast', 'Cervical', 'Colon',
'Esophageal', 'Gallbladder', 'Kidney', 'Larynx', 'Leukemia', 'Liver', 'Lung', 'Lymphoma', 'Melanoma',
'Oral/lip', 'Nervous System', 'Ovarian', 'Pancreatic', 'Prostate', 'Rectal', 'Non-Melanoma Skin',
'Skin-Other', 'Soft Tissue', 'Stomach', 'Testicular', 'Thyroid', 'Uterus', 'Other' ) ) )
# bind columns indicating age at diagnosis for specific cancer types
l <- c( 'mcqdat99',
paste0( 'mcqdat0', c( 1,3,5,7,9 ) ),
paste0('mcqdat', c( 11,13,15 ) ) )
l.2 <- list()
for( i in 1:length( l ) ){
l.2[[i]] <- get( l[i] )[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" ) ]
timeall <- do.call( 'rbind', l.2 )
}
# bind columns indicating age at diagnosis of cancer
l.3 <- c( 'mcqdat05', 'mcqdat07', 'mcqdat09', 'mcqdat11', 'mcqdat13', 'mcqdat15' )
l.4 <- list()
for ( i in 1:length( l.3 )){
l.4[[i]] <- get( l.3[i] )[, c( "SEQN", "MCQ240DK" ) ]
dkall <- do.call('rbind', l.4)
}
# 2017-2018 cycle columns
time1718 <- mcqdat17[, c( 'SEQN', 'MCD240A', 'MCD240B', 'MCD240C' ) ]
# merge
mcqall.b <- left_join( timeall, dkall, by = 'SEQN' ) %>%
left_join( mcqall, ., by = 'SEQN' ) %>%
left_join( ., time1718, by = 'SEQN' )
# cancer site labels
csites <- c( 'Bladder', 'Blood', 'Bone', 'Brain', 'Breast', 'Cervical', 'Colon',
'Esophageal', 'Gallbladder', 'Kidney', 'Larynx', 'Leukemia', 'Liver', 'Lung', 'Lymphoma', 'Melanoma',
'Oral/lip', 'Nervous System', 'Ovarian', 'Pancreatic', 'Prostate', 'Rectal', 'Non-Melanoma Skin',
'Skin-Other', 'Soft Tissue', 'Stomach', 'Testicular', 'Thyroid', 'Uterus', 'Other', 'Unknown' )
age.dx.var <- c( paste0( 'MCQ240', LETTERS ), paste0( 'MCQ240', c( 'AA', 'BB', 'CC', 'DD', 'DK' ) ) )
mcqall.b$AgeDxA <- NA
for ( i in 1:length( csites ) ){
mcqall.b[which( mcqall.b$CATYPEA == csites[i] ), 'AgeDxA'] <- mcqall.b[which( mcqall.b$CATYPEA == csites[i] ), age.dx.var[i]]
}
mcqall.b$AgeDxB <- NA
mcqall.b$AgeDxC <- NA
for ( i in 1:30 ){
mcqall.b[which( mcqall.b$CATYPEB == csites[i] ), 'AgeDxB'] <- mcqall.b[which( mcqall.b$CATYPEB == csites[i] ), age.dx.var[i]]
mcqall.b[which( mcqall.b$CATYPEC == csites[i] ), 'AgeDxC'] <- mcqall.b[which( mcqall.b$CATYPEC == csites[i] ), age.dx.var[i]]
}
# cycle 10 ( 2017-2018 ) already has a variable with age at a, b,  and c cancer dx
# so I will append them to new variables created
mcqall.bc <- mcqall.b %>%
mutate( AgeDxA = ifelse( cycle == '2017-2018', MCD240A, AgeDxA ),
AgeDxB = ifelse( cycle == '2017-2018', MCD240B, AgeDxB ),
AgeDxC = ifelse( cycle == '2017-2018', MCD240C, AgeDxC ) )
# CREATE VARIABLES
mcqall.bcd <- mcqall.bc%>%
rowwise(  )%>%
mutate( RIDAGEMN = ifelse( is.na( RIDAGEMN ) == T, RIDAGEYR*12, RIDAGEMN ),
TimeSinceCADX = ifelse( is.na( AgeDxA ) == T & is.na( AgeDxB ) == T & is.na( AgeDxC ) == T, NA,
ifelse( CA == 1, RIDAGEYR-min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ), NA ) ) ,
PrimaryCA = as.factor( as.character( ( ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA != 'Non-Melanoma Skin', paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB != 'Non-Melanoma Skin', paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC != 'Non-Melanoma Skin', paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
NA ) ) ) ) ) ) ) ) ) ) ) ),
TimeCAFactor = as.factor( ifelse( TimeSinceCADX < 2,  '2< years',
ifelse( TimeSinceCADX >= 2 & TimeSinceCADX < 6, '>= 2 and <6 years',
ifelse( TimeSinceCADX >= 6,  '>= 6 years', NA ) ) ) ) ,
AgeDxAmn = AgeDxA*12 ,
AgeDxBmn = AgeDxB*12 ,
AgeDxCmn = AgeDxC*12 ,
TimeSinceCADXmn = ifelse( is.na( AgeDxAmn ) == T & is.na( AgeDxBmn ) == T & is.na( AgeDxCmn ) == T, NA,
ifelse( CA == 1, RIDAGEMN-min( c( AgeDxAmn, AgeDxBmn, AgeDxCmn ),  na.rm = TRUE ), NA ) ) ,
TimeCAFactormn = as.factor( ifelse( TimeSinceCADXmn < 24,  '2< years',
ifelse( TimeSinceCADXmn >= 24 & TimeSinceCADXmn<72, '>= 2 and <6 years',
ifelse( TimeSinceCADXmn >= 72,  '>= 6 years', NA ) ) ) ) ,
TimeSinceCADXmn = ifelse( TimeSinceCADXmn < 0, NA, TimeSinceCADXmn ) ,
TimeCAFactormn = ifelse( TimeSinceCADXmn < 0, NA, as.character( TimeCAFactormn ) ) ,
TimeSinceCADX = ifelse( TimeSinceCADX < 0, NA, TimeSinceCADX ) ,
TimeCAFactor = factor( ifelse( TimeSinceCADX < 0, NA, as.character( TimeCAFactor ) ) ) ) %>%
select( SEQN, TimeSinceCADX, PrimaryCA, CA, TimeCAFactor, RIDAGEYR, RIDAGEMN, AgeDxA, AgeDxB, AgeDxC, CATYPEA, CATYPEB, CATYPEC,
TimeSinceCADXmn, TimeCAFactormn, AgeDxAmn, AgeDxBmn, AgeDxCmn )
table(mcqall.bcd$PrimaryCA)
# fix some rows without values
mcqall.bcd$PrimaryCA <- factor( as.character( ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == FALSE, paste( mcqall.bcd$CATYPEA ),
ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == TRUE, 'Unknown',
ifelse( is.na( mcqall.bcd$PrimaryCA ) == FALSE, paste( mcqall.bcd$PrimaryCA ), NA ) ) ) ) )
table(mcqall.bcd$PrimaryCA)
View(mcqall.bcd.2[which(mcqall.bcd.2$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd.2$CATYPEB)==F),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd$CATYPEB)==F),])
levels(mcqall.bcd$PrimaryCA)
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = as.factor( as.character( ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
NA ) ) ) ) ) ) ) ) )
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = dplyr::case_when(
min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB ~ paste( CATYPEB ),
min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC ~ paste( CATYPEC ),
min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxA ~ paste( CATYPEA ),
min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxC ~ paste( CATYPEC ),
min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxA ~ paste( CATYPEA ),
min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxB ~ paste( CATYPEB ),
NA )
)
View(mcqall.bcd[which( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB),])
View(mcqall.bcd[which( min( c( mcqall.bcd$AgeDxA, mcqall.bcd$AgeDxB, mcqall.bcd$AgeDxC ),  na.rm = TRUE ) == mcqall.bcd$AgeDxA & mcqall.bcd$CATYPEA == 'Non-Melanoma Skin' & min( c( mcqall.bcd$AgeDxB, mcqall.bcd$AgeDxC ),  na.rm = TRUE ) == mcqall.bcd$AgeDxB),])
View(mcqall.bcd[which(mcqall$CATYPEA =='Non-Melanoma Skin' | mcqall$CATYPEB =='Non-Melanoma Skin' | mcqall$CATYPEC =='Non-Melanoma Skin' ),])
View(mcqall.bcd[which(mcqall.bcd$CATYPEA =='Non-Melanoma Skin' | mcqall.bcd$CATYPEB =='Non-Melanoma Skin' | mcqall.bcd$CATYPEC =='Non-Melanoma Skin' ),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEB ) == F)),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEB ) == F) & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEB ) == F) & min( c( mcqall.bcd$AgeDxB, mcqall.bcd$AgeDxC ),  na.rm = TRUE ) == mcqall.bcd$AgeDxB),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEB ) == F)),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEC ) == F) & min( c( mcqall.bcd$AgeDxB, mcqall.bcd$AgeDxC ),  na.rm = TRUE ) == mcqall.bcd$AgeDxB),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEC ) == F)),])
min(c(9,NA),na.rm=T)
min( c( mcqall.bcd$AgeDxB, mcqall.bcd$AgeDxC ),  na.rm = TRUE )
View(mcqall.bcd[which( mcqall.bcd$AgeDxA < mcqall.bcd$AgeDxB & mcqall.bcd$AgeDxA < mcqall.bcd$AgeDxC & mcqall.bcd$CATYPEA == 'Non-Melanoma Skin' & mcqall.bcd$AgeDxB < mcqall.bcd$AgeDxC),])
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEC ) == F)),])
View(mcqall.bcd[which( min( c( mcqall.bcd$AgeDxA, mcqall.bcd$AgeDxB, mcqall.bcd$AgeDxC ),  na.rm = TRUE ) == mcqall.bcd$AgeDxA & mcqall.bcd$CATYPEA == 'Non-Melanoma Skin' & min( c( mcqall.bcd$AgeDxB, mcqall.bcd$AgeDxC ),  na.rm = TRUE ) == mcqall.bcd$AgeDxB),])
1<NA
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEC ) == F)),])
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = case_when(
PrimaryCA =='Non-Melanoma Skin' & (is.na($CATYPEB ) == F | is.na($CATYPEC ) == F)) ~ CATYPEB,
PrimaryCA
)
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = case_when(
PrimaryCA =='Non-Melanoma Skin' & (is.na($CATYPEB ) == F | is.na($CATYPEC ) == F) ~ CATYPEB,
PrimaryCA ) )
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = case_when(
PrimaryCA =='Non-Melanoma Skin' & (is.na($CATYPEB ) == F | is.na($CATYPEC ) == F) ~ CATYPEB,
PrimaryCA ) )
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = case_when(
PrimaryCA =='Non-Melanoma Skin' & (is.na($CATYPEB ) == F | is.na(CATYPEC ) == F) ~ CATYPEB,
PrimaryCA ) )
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = case_when(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F) ~ CATYPEB,
PrimaryCA ) )
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = ifelse(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F), CATYPEB,
PrimaryCA ) )
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd$CATYPEB ) == F | is.na(mcqall.bcd$CATYPEC ) == F)),])
bcd
View(mcqall.bcd2[which(mcqall.bcd2$PrimaryCA =='Non-Melanoma Skin' & (is.na(mcqall.bcd2$CATYPEB ) == F | is.na(mcqall.bcd2$CATYPEC ) == F)),])
table(mcqall.bcd$PrimaryCA)
table(mcqall.bcd2$PrimaryCA)
mcqall.bcd2<-mcqall.bcd %>%
mutate( factor( as.character( PrimaryCA = ifelse(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F), CATYPEB,
PrimaryCA ) ) ) )
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = ifelse(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F), CATYPEB,
PrimaryCA ) )
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = factor( as.character( ifelse(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F), CATYPEB,
PrimaryCA ) ) ) )
table(mcqall.bcd$PrimaryCA)
table(mcqall.bcd2$PrimaryCA)
mcqall.bcd2<-mcqall.bcd %>%
mutate( PrimaryCA = factor( as.character( ifelse(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F), paste(CATYPEB),
paste(PrimaryCA ) ) ) ) )
table(mcqall.bcd2$PrimaryCA)
#merge nutrient data
colnames( nutr9901 ) <- colnames( nutrdat03 )
# Diabetes questionnaire
diqdat99 <- nhanes_load_data( 'DIQ', '1999-2000', demographics = FALSE )
# cycle 10 ( 2017-2018 ) already has a variable with age at a, b,  and c cancer dx
# so I will append them to new variables created
mcqall.bc <- mcqall.b %>%
mutate( AgeDxA = ifelse( cycle == '2017-2018', MCD240A, AgeDxA ),
AgeDxB = ifelse( cycle == '2017-2018', MCD240B, AgeDxB ),
AgeDxC = ifelse( cycle == '2017-2018', MCD240C, AgeDxC ) )
# CREATE VARIABLES
mcqall.bcd <- mcqall.bc%>%
rowwise(  )%>%
mutate( RIDAGEMN = ifelse( is.na( RIDAGEMN ) == T, RIDAGEYR*12, RIDAGEMN ),
TimeSinceCADX = ifelse( is.na( AgeDxA ) == T & is.na( AgeDxB ) == T & is.na( AgeDxC ) == T, NA,
ifelse( CA == 1, RIDAGEYR-min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ), NA ) ) ,
PrimaryCA = as.factor( as.character( ( ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA != 'Non-Melanoma Skin', paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB != 'Non-Melanoma Skin', paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC != 'Non-Melanoma Skin', paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
NA ) ) ) ) ) ) ) ) ) ) ) ),
PrimaryCA = factor( as.character( ifelse(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F), paste(CATYPEB),
paste(PrimaryCA ) ) ) ),
TimeCAFactor = as.factor( ifelse( TimeSinceCADX < 2,  '2< years',
ifelse( TimeSinceCADX >= 2 & TimeSinceCADX < 6, '>= 2 and <6 years',
ifelse( TimeSinceCADX >= 6,  '>= 6 years', NA ) ) ) ) ,
AgeDxAmn = AgeDxA*12 ,
AgeDxBmn = AgeDxB*12 ,
AgeDxCmn = AgeDxC*12 ,
TimeSinceCADXmn = ifelse( is.na( AgeDxAmn ) == T & is.na( AgeDxBmn ) == T & is.na( AgeDxCmn ) == T, NA,
ifelse( CA == 1, RIDAGEMN-min( c( AgeDxAmn, AgeDxBmn, AgeDxCmn ),  na.rm = TRUE ), NA ) ) ,
TimeCAFactormn = as.factor( ifelse( TimeSinceCADXmn < 24,  '2< years',
ifelse( TimeSinceCADXmn >= 24 & TimeSinceCADXmn<72, '>= 2 and <6 years',
ifelse( TimeSinceCADXmn >= 72,  '>= 6 years', NA ) ) ) ) ,
TimeSinceCADXmn = ifelse( TimeSinceCADXmn < 0, NA, TimeSinceCADXmn ) ,
TimeCAFactormn = ifelse( TimeSinceCADXmn < 0, NA, as.character( TimeCAFactormn ) ) ,
TimeSinceCADX = ifelse( TimeSinceCADX < 0, NA, TimeSinceCADX ) ,
TimeCAFactor = factor( ifelse( TimeSinceCADX < 0, NA, as.character( TimeCAFactor ) ) ) ) %>%
select( SEQN, TimeSinceCADX, PrimaryCA, CA, TimeCAFactor, RIDAGEYR, RIDAGEMN, AgeDxA, AgeDxB, AgeDxC, CATYPEA, CATYPEB, CATYPEC,
TimeSinceCADXmn, TimeCAFactormn, AgeDxAmn, AgeDxBmn, AgeDxCmn )
table(mcqall.bcd$PrimaryCA)
# CREATE VARIABLES
mcqall.bcd <- mcqall.bc%>%
rowwise(  )%>%
mutate( RIDAGEMN = ifelse( is.na( RIDAGEMN ) == T, RIDAGEYR*12, RIDAGEMN ),
TimeSinceCADX = ifelse( is.na( AgeDxA ) == T & is.na( AgeDxB ) == T & is.na( AgeDxC ) == T, NA,
ifelse( CA == 1, RIDAGEYR-min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ), NA ) ) ,
PrimaryCA = as.factor( as.character( ( ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA != 'Non-Melanoma Skin', paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB != 'Non-Melanoma Skin', paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC != 'Non-Melanoma Skin', paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
NA ) ) ) ) ) ) ) ) ) ) ) ),
TimeCAFactor = as.factor( ifelse( TimeSinceCADX < 2,  '2< years',
ifelse( TimeSinceCADX >= 2 & TimeSinceCADX < 6, '>= 2 and <6 years',
ifelse( TimeSinceCADX >= 6,  '>= 6 years', NA ) ) ) ) ,
AgeDxAmn = AgeDxA*12 ,
AgeDxBmn = AgeDxB*12 ,
AgeDxCmn = AgeDxC*12 ,
TimeSinceCADXmn = ifelse( is.na( AgeDxAmn ) == T & is.na( AgeDxBmn ) == T & is.na( AgeDxCmn ) == T, NA,
ifelse( CA == 1, RIDAGEMN-min( c( AgeDxAmn, AgeDxBmn, AgeDxCmn ),  na.rm = TRUE ), NA ) ) ,
TimeCAFactormn = as.factor( ifelse( TimeSinceCADXmn < 24,  '2< years',
ifelse( TimeSinceCADXmn >= 24 & TimeSinceCADXmn<72, '>= 2 and <6 years',
ifelse( TimeSinceCADXmn >= 72,  '>= 6 years', NA ) ) ) ) ,
TimeSinceCADXmn = ifelse( TimeSinceCADXmn < 0, NA, TimeSinceCADXmn ) ,
TimeCAFactormn = ifelse( TimeSinceCADXmn < 0, NA, as.character( TimeCAFactormn ) ) ,
TimeSinceCADX = ifelse( TimeSinceCADX < 0, NA, TimeSinceCADX ) ,
TimeCAFactor = factor( ifelse( TimeSinceCADX < 0, NA, as.character( TimeCAFactor ) ) ) ) %>%
select( SEQN, TimeSinceCADX, PrimaryCA, CA, TimeCAFactor, RIDAGEYR, RIDAGEMN, AgeDxA, AgeDxB, AgeDxC, CATYPEA, CATYPEB, CATYPEC,
TimeSinceCADXmn, TimeCAFactormn, AgeDxAmn, AgeDxBmn, AgeDxCmn )
# fix some rows without values
mcqall.bcd$PrimaryCA <- factor( as.character( ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == FALSE, paste( mcqall.bcd$CATYPEA ),
ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == TRUE, 'Unknown',
ifelse( is.na( mcqall.bcd$PrimaryCA ) == FALSE, paste( mcqall.bcd$PrimaryCA ), NA ) ) ) ) )
mcqall.bcd<-mcqall.bcd %>%
mutate( PrimaryCA = factor( as.character( ifelse(
PrimaryCA =='Non-Melanoma Skin' & (is.na(CATYPEB ) == F | is.na(CATYPEC ) == F), paste(CATYPEB),
paste(PrimaryCA ) ) ) ) )
table(mcqall.bcd$PrimaryCA)
df
library(tidyverse)
library(rio) # to import xlsx files
url <- c( 'https://www.irs.gov/pub/irs-tege/f1023ez_approvals_2014.xlsx',
'https://www.irs.gov/pub/irs-tege/f1023ez_approvals_2015.xlsx',
'https://www.irs.gov/pub/irs-tege/f1023ez_approvals_2016.xlsx',
'https://www.irs.gov/pub/irs-tege/f1023EZ_approvals_2017.xlsx',
'https://www.irs.gov/pub/irs-tege/f1023ez_approvals_2018.xlsx',
'https://www.irs.gov/pub/irs-tege/f1023ez_approvals_2019.xlsx',
'https://www.irs.gov/pub/irs-tege/f1023ez-approvals-2020.xlsx',
'https://www.irs.gov/pub/irs-tege/f1023ez-approvals-2021.xlsx' )
df <- lapply( url, function(x) rio::import( file = x ) )
length(df)
paste0( 'dd',1:8 )
for (i in 1:length( df ) ){
get( paste0( 'dd',1:8 )[i] ) <- df[[i]]
}
for ( i in 1:8 ) {
dds <- paste0( 'dd',1:8 )
assign( dds, 1:i )
}
dd1
for ( i in 1:8 ) {
dds <- paste0( 'dd',1:8 )
assign( dds, df[[i]] )
}
dd1
dd3
dds
# assign elements of list as individual dataframes, names dd1:dd8
for ( i in 1:8 ) {
dds <- paste0( 'dd',1:8 )
assign( dds[i], df[[i]] )
}
dd1
dd2
dd3
dd7
dd8
dd1$EIN <- gsub( "-", "", dd1$EIN )
dd1$ID <- paste0( "ID-", 2014, "-", dd1$EIN )
saveRDS( dd1, "Data/1_Raw/f1023ez_approvals_2014.rds")
dd2$EIN <- gsub( "-", "", dd2$EIN )
dd2$ID <- paste0( "ID-", 2015, "-", dd2$EIN )
saveRDS( dd2, "Data/1_Raw/f1023ez_approvals_2015.rds")
dd3$EIN <- gsub( "-", "", dd3$EIN )
dd3$ID <- paste0( "ID-", 2016, "-", dd3$EIN )
saveRDS( dd3, "Data/1_Raw/f1023ez_approvals_2016.rds")
dd4$EIN <- gsub( "-", "", dd4$EIN )
dd4$ID <- paste0( "ID-", 2017, "-", dd4$EIN )
saveRDS( dd4, "Data/1_Raw/f1023ez_approvals_2017.rds")
dd5$EIN <- gsub( "-", "", dd5$EIN )
dd5$ID <- paste0( "ID-", 2018, "-", dd5$EIN )
saveRDS( dd5, "Data/1_Raw/f1023ez_approvals_2018.rds")
colnames(dd6)[1] <- "EIN" # NOTE that this file has "Ein" -> fixing it to "EIN"
dd6$EIN <- gsub( "-", "", dd6$EIN )
dd6$ID <- paste0( "ID-", 2019, "-", dd6$EIN )
saveRDS( dd6, "Data/1_Raw/f1023ez_approvals_2019.rds")
# now, replicating code provided in: https://nonprofit-open-data-collective.github.io/open-1023-ez-dataset/Step-01-ProcessRawData.html
setwd(' /Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/R code for now' )
# now, replicating code provided in: https://nonprofit-open-data-collective.github.io/open-1023-ez-dataset/Step-01-ProcessRawData.html
setwd(' /Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/' )
# now, replicating code provided in: https://nonprofit-open-data-collective.github.io/open-1023-ez-dataset/Step-01-ProcessRawData.html
setwd('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/' )
# now, replicating code provided in: https://nonprofit-open-data-collective.github.io/open-1023-ez-dataset/Step-01-ProcessRawData.html
setwd('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/R code for now' )
dd1$EIN <- gsub( "-", "", dd1$EIN )
dd1$ID <- paste0( "ID-", 2014, "-", dd1$EIN )
saveRDS( dd1, "f1023ez_approvals_2014.rds")
dd2$EIN <- gsub( "-", "", dd2$EIN )
dd2$ID <- paste0( "ID-", 2015, "-", dd2$EIN )
saveRDS( dd2, "f1023ez_approvals_2015.rds")
dd3$EIN <- gsub( "-", "", dd3$EIN )
dd3$ID <- paste0( "ID-", 2016, "-", dd3$EIN )
saveRDS( dd3, "f1023ez_approvals_2016.rds")
dd4$EIN <- gsub( "-", "", dd4$EIN )
dd4$ID <- paste0( "ID-", 2017, "-", dd4$EIN )
saveRDS( dd4, "f1023ez_approvals_2017.rds")
dd5$EIN <- gsub( "-", "", dd5$EIN )
dd5$ID <- paste0( "ID-", 2018, "-", dd5$EIN )
saveRDS( dd5, "f1023ez_approvals_2018.rds")
colnames(dd6)[1] <- "EIN" # NOTE that this file has "Ein" -> fixing it to "EIN"
dd6$EIN <- gsub( "-", "", dd6$EIN )
dd6$ID <- paste0( "ID-", 2019, "-", dd6$EIN )
saveRDS( dd6, "f1023ez_approvals_2019.rds")
# now, replicating code provided in: https://nonprofit-open-data-collective.github.io/open-1023-ez-dataset/Step-01-ProcessRawData.html
setwd('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/R code for now/Data-Raw' )
# now, replicating code provided in: https://nonprofit-open-data-collective.github.io/open-1023-ez-dataset/Step-01-ProcessRawData.html
setwd('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/R code for now/Data-Raw' )
dd1$EIN <- gsub( "-", "", dd1$EIN )
dd1$ID <- paste0( "ID-", 2014, "-", dd1$EIN )
saveRDS( dd1, "f1023ez_approvals_2014.rds")
dd2$EIN <- gsub( "-", "", dd2$EIN )
dd2$ID <- paste0( "ID-", 2015, "-", dd2$EIN )
saveRDS( dd2, "f1023ez_approvals_2015.rds")
dd3$EIN <- gsub( "-", "", dd3$EIN )
dd3$ID <- paste0( "ID-", 2016, "-", dd3$EIN )
saveRDS( dd3, "f1023ez_approvals_2016.rds")
dd4$EIN <- gsub( "-", "", dd4$EIN )
dd4$ID <- paste0( "ID-", 2017, "-", dd4$EIN )
saveRDS( dd4, "f1023ez_approvals_2017.rds")
dd5$EIN <- gsub( "-", "", dd5$EIN )
dd5$ID <- paste0( "ID-", 2018, "-", dd5$EIN )
saveRDS( dd5, "f1023ez_approvals_2018.rds")
colnames(dd6)[1] <- "EIN" # NOTE that this file has "Ein" -> fixing it to "EIN"
dd6$EIN <- gsub( "-", "", dd6$EIN )
dd6$ID <- paste0( "ID-", 2019, "-", dd6$EIN )
saveRDS( dd6, "f1023ez_approvals_2019.rds")
colnames(dd7)
colnames(dd7)[1] <- "EIN" # NOTE that this file has "Ein" -> fixing it to "EIN"
dd7$EIN <- gsub( "-", "", dd7$EIN )
dd7$ID <- paste0( "ID-", 2019, "-", dd7$EIN )
saveRDS( dd7, "f1023ez_approvals_2020.rds")
colnames(dd8)
colnames(dd7)[1] <- "EIN" # NOTE that this file has "Ein" -> fixing it to "EIN"
dd7$EIN <- gsub( "-", "", dd7$EIN )
dd7$ID <- paste0( "ID-", 2020, "-", dd7$EIN )
saveRDS( dd7, "f1023ez_approvals_2020.rds")
colnames(dd8)[1] <- "EIN" # NOTE that this file has "Ein" -> fixing it to "EIN"
dd8$EIN <- gsub( "-", "", dd8$EIN )
dd8$ID <- paste0( "ID-", 2021, "-", dd8$EIN )
saveRDS( dd8, "f1023ez_approvals_2021.rds")
# 2018 vs 2017, The elements of setdiff(x,y) are those elements in x but not in y
setdiff( names( dd5 ), names( dd4 ) )
?setdiff
# 2018 vs 2017, The elements of setdiff(x,y) are those elements in x but not in y
setdiff( names( dd6 ), names( dd4 ) )
# 2018 vs 2017, The elements of setdiff(x,y) are those elements in x but not in y
setdiff( names( dd8 ), names( dd4 ) )
# 2018 vs 2017, The elements of setdiff(x,y) are those elements in x but not in y
setdiff( names( dd3 ), names( dd4 ) )
setdiff( names( dd4 ), names( dd5 ) )
identical(dd5$Gamingactyno...103, dd5$Gamingactyno...91)
identical(dd8$Gamingactyno...103, dd5$Gamingactyno...91)
identical(dd8$Gamingactyno...103, dd8$Gamingactyno...91)
identical(dd6$Gamingactyyes...104, dd6$Gamingactyyes...92)
?sapply
colnames(dd5)[91] <- "Gamingactyno"
colnames(dd5)[92] <- "Gamingactyyes"
colnames(dd5)[103] <- "Gamingactyno.1"
colnames(dd5)[104] <- "Gamingactyyes.1"
colnames(dd6)[91] <- "Gamingactyno"
colnames(dd6)[92] <- "Gamingactyyes"
colnames(dd6)[103] <- "Gamingactyno.1"
colnames(dd6)[104] <- "Gamingactyyes.1"
colnames(dd7)[91] <- "Gamingactyno"
colnames(dd7)[92] <- "Gamingactyyes"
colnames(dd7)[103] <- "Gamingactyno.1"
colnames(dd7)[104] <- "Gamingactyyes.1"
colnames(dd8)[91] <- "Gamingactyno"
colnames(dd8)[92] <- "Gamingactyyes"
colnames(dd8)[103] <- "Gamingactyno.1"
colnames(dd8)[104] <- "Gamingactyyes.1"
# final row bind
dat <- bind_rows( dd1, dd2, dd3, dd4, dd5, dd6 )
# final row bind
dat <- bind_rows( dd1, dd2, dd3, dd4, dd5, dd6, d7, d8 )
# final row bind
dat <- bind_rows( dd1, dd2, dd3, dd4, dd5, dd6, dd7, d8 )
# final row bind
dat <- bind_rows( dd1, dd2, dd3, dd4, dd5, dd6, dd7, dd8 )
# check for missings in EIN
sum( is.na( dat$EIN ) )
sum( is.na( dat$`Case Number` ) )
# check for missings in EIN and case number
sum( is.na( dat$EIN ) )
sum( is.na( dat$`Case Number` ) )
head(dat[,c("Orgname1", "Orgname2")],5)
# Merging Orgname 1 and 2 to create variable ORGNAME
dat$ORGNAME <- dat$Orgname1
x <- is.na(dat$Orgname2)
x <- dat[!x,c("Orgname1","Orgname2")]
x[1:10,]
x <- is.na(dat$Orgname2)
dat$ORGNAME[!x] <- paste0(dat$ORGNAME[!x], dat$Orgname2[!x])
x <- dat[!x,"ORGNAME"]
x[1:10,]
x
# final row bind
dat <- bind_rows( dd1, dd2, dd3, dd4, dd5, dd6, dd7, dd8 )
# check for missings in EIN and case number
sum( is.na( dat$EIN ) )
sum( is.na( dat$`Case Number` ) )
# Current dataset has two variables for ORGNAME and they seem to be a single name split into the two vars.
head(dat[,c("Orgname1", "Orgname2")],5)
x <- dat[,c("Orgname1", "Orgname2")] #subsetting only orgnames to compare
x <- x[!is.na(x$Orgname2),] #removing NAs from Orgname2
x$Org2len <- nchar(as.character(x$Orgname2))
x <- x[order(x$Org2len, decreasing = T),]
head(x, 10)
# Merging Orgname 1 and 2 to create variable ORGNAME
dat$ORGNAME <- dat$Orgname1
x <- is.na(dat$Orgname2)
x <- dat[!x,c("Orgname1","Orgname2")]
x[1:10,]
x <- is.na(dat$Orgname2)
dat$ORGNAME[!x] <- paste0(dat$ORGNAME[!x], dat$Orgname2[!x])
x <- dat[!x,"ORGNAME"]
x[1:10,]
colnames(dat)[2] <- "Case.Number"
nrow(dat)
unique(dat)
dat <- nrow(unique(dat))
# final row bind
dat <- bind_rows( dd1, dd2, dd3, dd4, dd5, dd6, dd7, dd8 )
# check for missings in EIN and case number
sum( is.na( dat$EIN ) )
sum( is.na( dat$`Case Number` ) )
# Current dataset has two variables for ORGNAME and they seem to be a single name split into the two vars.
head(dat[,c("Orgname1", "Orgname2")],5)
