# repository folder
wd<- ( '/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/np-density-dashboard/' )
# folder outside of repository to store large files
lf <- '/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/Large-Files-Bank'
wd2 <- paste0( wd, 'Data-Wrangled' )
setwd( wd2 )
ppl <- readRDS( "pplAddresses_census.rds" )
# subsetting
demo <- dplyr::select( ppl, ID, Address, City, State, Zip )
x <- sample(nrow(ppl),20, replace = FALSE)
demo <- demo[ x, ]
rownames(demo) <- NULL
addressFile <- demo
(addressFile <- demo ) %>%
geocode( ., street = Address,
city = City,
state = State,
postalcode = Zip,
method = 'census',
return_type = "geographies",
full_results = T ) %>%
select( id, input_address,
match = match_indicator, match_type,
out_address = matched_address, lat, lon = long,
tiger_line_id, tiger_line_side = tiger_side,
state_fips, county_fips,
tract_fips = census_tract, block_fips = census_block )
library(tidyverse)
(addressFile <- demo ) %>%
geocode( ., street = Address,
city = City,
state = State,
postalcode = Zip,
method = 'census',
return_type = "geographies",
full_results = T ) %>%
select( id, input_address,
match = match_indicator, match_type,
out_address = matched_address, lat, lon = long,
tiger_line_id, tiger_line_side = tiger_side,
state_fips, county_fips,
tract_fips = census_tract, block_fips = census_block )
library(tidygeocoder)
(addressFile <- demo ) %>%
geocode( ., street = Address,
city = City,
state = State,
postalcode = Zip,
method = 'census',
return_type = "geographies",
full_results = T ) %>%
select( id, input_address,
match = match_indicator, match_type,
out_address = matched_address, lat, lon = long,
tiger_line_id, tiger_line_side = tiger_side,
state_fips, county_fips,
tract_fips = census_tract, block_fips = census_block )
