library( dplyr )
library( tidyr )
library( pander )
library( httr )
library( ggmap )
library( tidyverse )
library( urbnmapr )         # state/county shapefiles
library( sf )               # simple features framework
library( tigris )           # TIGER shapefiles
library( tidycensus )       # Census data queries
library( cartogram )        # Create sf objects for Dorling Cartograms
options( tigris_class = "sf" )
options( tigris_use_cache = TRUE )
source('/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/np-density-dashboard/R/helpers.R')
lf <- "/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/Large-Files-Bank"
setwd( lf )
setwd( lf )
setwd( "../np-density-dashboard/Data-Wrangled")
# dir.create( "01-Temp" )
#
# saveRDS( d.1, "01-MSA-Census.rds" )
setwd( "01-Temp" )
d.1 <- readRDS( "01-MSA-Census.rds" )
d.1 <- do.call( "rbind", l ) %>% mutate( year = as.character( year ) ) # dataframe containing a column for tract GEOID and columns for its yearly census data
setwd( "01-Temp" )
d.1 <- readRDS( "01-MSA-Census.rds" )
ys.np <- list( 2014, 2015, 2016, 2017, 2018, 2019, 2020, c( 2014:2021) )       # we will index on the years we will subset
# save for later use
setwd( lf )
setwd( "../np-density-dashboard/Data-Wrangled/01-Temp")
d.2 <- readRDS( "02-MSA-NPO.rds" )
d.3 <- left_join( d.1, d.2, by = "year" )
install.packages( "parallel" )
library(parallel)
?mclapply
View(d.2)
lf <- "/Volumes/My Passport for Mac/Urban Institute/Summer Projects/Geospatial Dashboard/Large-Files-Bank"
setwd( lf )
# data containing NPO coordinates as points
npo <- readRDS( 'NONPROFITS-2014-2021v7.rds' )
d.2 <- readRDS( "02-MSA-NPO.rds" )
# save for later use
setwd( lf )
setwd( "../np-density-dashboard/Data-Wrangled/01-Temp")
d.2 <- readRDS( "02-MSA-NPO.rds" )
length(levels(as.factor(d.2$GEOID)))
length(unique(levels(as.factor(d.2$GEOID))))
length(levels(as.factor(d.2$year)))
View(d8)
View(d.2
View(d.2)
# obtain MSA cartographic boundary shapefiles
m <- core_based_statistical_areas( cb = T )
m <- st_transform( m, crs = 3395 )             # compatible crs
# spatial join MSA names to tract-level data
sj <- m %>%
rename (MSA = NAME ) %>%
select( MSA, geometry ) %>%
st_join( t, ., left = T ) %>%          # spatial left join
left_join( ., d.2) %>%                 # append Census data
distinct( )
library( tidyverse )
library( urbnmapr )         # state/county shapefiles
library( sf )               # simple features framework
library( tigris )           # TIGER shapefiles
library( tidycensus )       # Census data queries
library( cartogram )        # Create sf objects for Dorling Cartograms
options( tigris_class = "sf" )
options( tigris_use_cache = TRUE )
# obtain MSA cartographic boundary shapefiles
m <- core_based_statistical_areas( cb = T )
m <- st_transform( m, crs = 3395 )             # compatible crs
# pull tract-level shapefiles from `tigris`
t <- tracts( cb = TRUE ) # USA Census tract shapefiles
t <- st_transform( t, crs = 3395 ) # project onto compatible crs
# spatial join MSA names to tract-level data
sj <- m %>%
rename (MSA = NAME ) %>%
select( MSA, geometry ) %>%
st_join( t, ., left = T ) %>%          # spatial left join
left_join( ., d.2) %>%                 # append Census data
distinct( )
# spatial join MSA names to tract-level data
sj <- m %>%
rename (MSA = NAME ) %>%
select( MSA, geometry ) %>%
st_join( t, ., left = T ) %>%          # spatial left join
distinct( )
